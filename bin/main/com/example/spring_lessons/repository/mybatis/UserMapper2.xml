<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.spring_lessons.repository.mybatis.UserMapper2">
    <resultMap type="com.example.spring_lessons.entity.User" id="user">
        <id column="user_id" property="userId"></id>
        <result column="password" property="password"></result>
        <result column="user_name" property="userName"></result>
        <result column="birthday" property="birthday"></result>
        <result column="age" property="age"></result>
        <result column="marrige" property="marrige"></result>
        <result column="role" property="role"></result>
    </resultMap>
    <insert id="insert" parameterType="com.example.spring_lessons.entity.User">
        insert into m_user (
            user_id
            , password
            , user_name
            , birthday
            , age
            , marrige
            , role)
        values (
            #{userId}
            , #{password}
            , #{userName}
            , #{birthday}
            , #{age}
            , #{marrige}
            , #{role})
    </insert>
    <select id="selectOne" parameterType="string" resultType="com.example.spring_lessons.entity.User">
        select 
            user_id as userId
            , password
            , user_name as userName
            , birthday
            , age
            , marrige
            , role
        from m_user
        where user_id = #{userId}
    </select>
    <select id="selectMany" resultMap="user">
        select 
            user_id
            , password
            , user_name
            , birthday
            , age
            , marrige
            , role
        from m_user
    </select>
    <update id="updateOne" parameterType="com.example.spring_lessons.entity.User">
        update m_user
        set
            password = #{password}
            , user_name = #{userName}
            , birthday = #{birthday}
            , age = #{age}
            , marrige = #{marrige}
        where user_id = #{userId}
    </update>
    <delete id="deleteOne" parameterType="String">
        delete from m_user where user_id = #{userId}
    </delete>
</mapper>